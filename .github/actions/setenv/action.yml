name: Set environment
description: 'Set environment'

inputs:
  scheduledBuildTime:
    description: 'Time for full scheduled build'
    required: false
    default: '0 3 * * 1,3,5' 
  referenceBuildTime:
    description: 'Time for full scheduled build'
    required: false
    default: '30 5 * * 1-5'
  subfolder:
    description: 'Subfolder to be used'
    required: false
    default: ''

runs:
  using: "composite"

  steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'
        lfs: 'true'

    - name: setup kerberos
      run: |
        kinit -kt ~/private/.keytab cmsmwbot
        klist -k -t -e ~/private/.keytab
        klist
        echo "xrdfs root://eosuser.cern.ch// ls $EOS_DIR"
        xrdfs root://eosuser.cern.ch// ls $EOS_DIR
      shell: bash

    - name: setup unscheduled
      if: github.event_name != 'schedule'
      run: echo PLOT_DIR=PR$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')/$(date +%Y_%m_%d)/"${{ inputs.subfolder }}" >> $GITHUB_ENV
      shell: bash

    - name: setup scheduled build
      if: github.event.schedule == inputs.scheduledBuildTime
      run: |
        echo PLOT_DIR=ScheduledBuilds/$(date +%Y_%m_%d)_$(git rev-parse --short "$GITHUB_SHA")/"${{ inputs.subfolder }}" >> $GITHUB_ENV
      shell: bash

    - name: setup reference run
      if: github.event.schedule == inputs.referenceBuildTime
      run: |
        echo PLOT_DIR=ReferenceRuns/$(date +%Y_%m_%d)_$(git rev-parse --short "$GITHUB_SHA")/"${{ inputs.subfolder }}" >> $GITHUB_ENV
      shell: bash

    - name: setup full events
      if: github.event_name != 'pull_request' && github.event.schedule != inputs.referenceBuildTime
      run: |
        echo "NTHREADS=64" >> $GITHUB_ENV
        echo "MAX_FILES=-1" >> $GITHUB_ENV
        echo "LUMI_SCALE=1" >> $GITHUB_ENV
      shell: bash

    - name: setup outdir
      run: echo "WREMNANTS_OUTDIR=/tmp/${USER}/$(uuidgen)" >> $GITHUB_ENV
      shell: bash

    - name: setup webdir
      # TODO: Get the local writing+copy to eos working
      run: echo "WEB_DIR=$WREMNANTS_OUTDIR/$LOCAL_WEB_DIR" >> $GITHUB_ENV
      shell: bash

    - name: create webdir
      run: mkdir -p ${{env.WEB_DIR}}
      shell: bash

    - id: outputs
      run: |
        echo "PLOT_DIR=$PLOT_DIR" >> $GITHUB_OUTPUT
        echo "MAX_FILES=$MAX_FILES" >> $GITHUB_OUTPUT
        echo "LUMI_SCALE=$LUMI_SCALE" >> $GITHUB_OUTPUT
        echo "NTHREADS=$NTHREADS" >> $GITHUB_OUTPUT
        echo "WREMNANTS_OUTDIR=$WREMNANTS_OUTDIR" >> $GITHUB_OUTPUT
        echo "WEB_DIR=$WEB_DIR" >> $GITHUB_OUTPUT
      shell: bash
